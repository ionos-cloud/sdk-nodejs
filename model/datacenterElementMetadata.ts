/**
 * CLOUD API
 * An enterprise-grade Infrastructure is provided as a Service (IaaS) solution that can be managed through a browser-based \"Data Center Designer\" (DCD) tool or via an easy to use API.   The API allows you to perform a variety of management tasks such as spinning up additional servers, adding volumes, adjusting networking, and so forth. It is designed to allow users to leverage the same power and flexibility found within the DCD visual tool. Both tools are consistent with their concepts and lend well to making the experience smooth and intuitive.
 *
 * The version of the OpenAPI document: 5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

export class DatacenterElementMetadata {
    /**
    * Resource\'s Entity Tag as defined in http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.11 . Entity Tag is also added as an \'ETag response header to requests which don\'t use \'depth\' parameter. 
    */
    'etag'?: string;
    /**
    * The last time the resource was created
    */
    'createdDate'?: Date;
    /**
    * The user who created the resource.
    */
    'createdBy'?: string;
    /**
    * The user id of the user who has created the resource.
    */
    'createdByUserId'?: string;
    /**
    * The last time the resource has been modified
    */
    'lastModifiedDate'?: Date;
    /**
    * The user who last modified the resource.
    */
    'lastModifiedBy'?: string;
    /**
    * The user id of the user who has last modified the resource.
    */
    'lastModifiedByUserId'?: string;
    /**
    * State of the resource. *AVAILABLE* There are no pending modification requests for this item; *BUSY* There is at least one modification request pending and all following requests will be queued; *INACTIVE* Resource has been de-provisioned; *DEPLOYING* Resource state DEPLOYING - relevant for Kubernetes cluster/nodepool; *ACTIVE* Resource state ACTIVE - relevant for Kubernetes cluster/nodepool; *FAILED* Resource state FAILED - relevant for Kubernetes cluster/nodepool; *SUSPENDED* Resource state SUSPENDED - relevant for Kubernetes cluster/nodepool; *FAILED_SUSPENDED* Resource state FAILED_SUSPENDED - relevant for Kubernetes cluster; *UPDATING* Resource state UPDATING - relevant for Kubernetes cluster/nodepool; *FAILED_UPDATING* Resource state FAILED_UPDATING - relevant for Kubernetes cluster/nodepool; *DESTROYING* Resource state DESTROYING - relevant for Kubernetes cluster; *FAILED_DESTROYING* Resource state FAILED_DESTROYING - relevant for Kubernetes cluster/nodepool; *TERMINATED* Resource state TERMINATED - relevant for Kubernetes cluster/nodepool
    */
    'state'?: DatacenterElementMetadata.StateEnum;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "etag",
            "baseName": "etag",
            "type": "string"
        },
        {
            "name": "createdDate",
            "baseName": "createdDate",
            "type": "Date"
        },
        {
            "name": "createdBy",
            "baseName": "createdBy",
            "type": "string"
        },
        {
            "name": "createdByUserId",
            "baseName": "createdByUserId",
            "type": "string"
        },
        {
            "name": "lastModifiedDate",
            "baseName": "lastModifiedDate",
            "type": "Date"
        },
        {
            "name": "lastModifiedBy",
            "baseName": "lastModifiedBy",
            "type": "string"
        },
        {
            "name": "lastModifiedByUserId",
            "baseName": "lastModifiedByUserId",
            "type": "string"
        },
        {
            "name": "state",
            "baseName": "state",
            "type": "DatacenterElementMetadata.StateEnum"
        }    ];

    static getAttributeTypeMap() {
        return DatacenterElementMetadata.attributeTypeMap;
    }
}

export namespace DatacenterElementMetadata {
    export enum StateEnum {
        Available = <any> 'AVAILABLE',
        Inactive = <any> 'INACTIVE',
        Busy = <any> 'BUSY',
        Deploying = <any> 'DEPLOYING',
        Active = <any> 'ACTIVE',
        Failed = <any> 'FAILED',
        Suspended = <any> 'SUSPENDED',
        FailedSuspended = <any> 'FAILED_SUSPENDED',
        Updating = <any> 'UPDATING',
        FailedUpdating = <any> 'FAILED_UPDATING',
        Destroying = <any> 'DESTROYING',
        FailedDestroying = <any> 'FAILED_DESTROYING',
        Terminated = <any> 'TERMINATED'
    }
}
