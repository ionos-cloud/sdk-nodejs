/* tslint:disable */
/* eslint-disable */
/**
 * CLOUD API
 * An enterprise-grade Infrastructure is provided as a Service (IaaS) solution that can be managed through a browser-based \"Data Center Designer\" (DCD) tool or via an easy to use API.   The API allows you to perform a variety of management tasks such as spinning up additional servers, adding volumes, adjusting networking, and so forth. It is designed to allow users to leverage the same power and flexibility found within the DCD visual tool. Both tools are consistent with their concepts and lend well to making the experience smooth and intuitive.
 *
 * The version of the OpenAPI document: 5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import { ResourceReference } from './resource-reference';

/**
 * 
 * @export
 * @interface ServerProperties
 */
export interface ServerProperties {
    /**
     * A name of that resource
     * @type {string}
     * @memberof ServerProperties
     */
    name?: string;
    /**
     * The total number of cores for the server
     * @type {number}
     * @memberof ServerProperties
     */
    cores: number;
    /**
     * The amount of memory for the server in MB, e.g. 2048. Size must be specified in multiples of 256 MB with a minimum of 256 MB; however, if you set ramHotPlug to TRUE then you must use a minimum of 1024 MB. If you set the RAM size more than 240GB, then ramHotPlug will be set to FALSE and can not be set to TRUE unless RAM size not set to less than 240GB.
     * @type {number}
     * @memberof ServerProperties
     */
    ram: number;
    /**
     * The availability zone in which the server should exist
     * @type {string}
     * @memberof ServerProperties
     */
    availabilityZone?: ServerPropertiesAvailabilityZoneEnum;
    /**
     * Status of the virtual Machine
     * @type {string}
     * @memberof ServerProperties
     */
    vmState?: ServerPropertiesVmStateEnum;
    /**
     * 
     * @type {ResourceReference}
     * @memberof ServerProperties
     */
    bootCdrom?: ResourceReference;
    /**
     * 
     * @type {ResourceReference}
     * @memberof ServerProperties
     */
    bootVolume?: ResourceReference;
    /**
     * Cpu family of pserver
     * @type {string}
     * @memberof ServerProperties
     */
    cpuFamily?: string;
}

/**
    * @export
    * @enum {string}
    */
export enum ServerPropertiesAvailabilityZoneEnum {
    Auto = 'AUTO',
    Zone1 = 'ZONE_1',
    Zone2 = 'ZONE_2'
}
/**
    * @export
    * @enum {string}
    */
export enum ServerPropertiesVmStateEnum {
    Nostate = 'NOSTATE',
    Running = 'RUNNING',
    Blocked = 'BLOCKED',
    Paused = 'PAUSED',
    Shutdown = 'SHUTDOWN',
    Shutoff = 'SHUTOFF',
    Crashed = 'CRASHED'
}



