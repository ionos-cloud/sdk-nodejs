/**
 * CLOUD API
 * An enterprise-grade Infrastructure is provided as a Service (IaaS) solution that can be managed through a browser-based \"Data Center Designer\" (DCD) tool or via an easy to use API.   The API allows you to perform a variety of management tasks such as spinning up additional servers, adding volumes, adjusting networking, and so forth. It is designed to allow users to leverage the same power and flexibility found within the DCD visual tool. Both tools are consistent with their concepts and lend well to making the experience smooth and intuitive.
 *
 * The version of the OpenAPI document: 5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

export class ResourceLimits {
    /**
    * maximum number of cores per server
    */
    'coresPerServer': number;
    /**
    * maximum cores per contract
    */
    'coresPerContract': number;
    /**
    * number of cores provisioned
    */
    'coresProvisioned': number;
    /**
    * maximum ram per server
    */
    'ramPerServer': number;
    /**
    * maximum ram per contract
    */
    'ramPerContract': number;
    /**
    * ram provisioned
    */
    'ramProvisioned': number;
    /**
    * hdd limit per volume
    */
    'hddLimitPerVolume': number;
    /**
    * hdd limit per contract
    */
    'hddLimitPerContract': number;
    /**
    * hdd volume provisioned
    */
    'hddVolumeProvisioned': number;
    /**
    * ssd limit per volume
    */
    'ssdLimitPerVolume': number;
    /**
    * ssd limit per contract
    */
    'ssdLimitPerContract': number;
    /**
    * ssd volume provisioned
    */
    'ssdVolumeProvisioned': number;
    /**
    * total reservable ip limit of the customer
    */
    'reservableIps': number;
    /**
    * reserved ips on a contract
    */
    'reservedIpsOnContract': number;
    /**
    * reserved ips in use
    */
    'reservedIpsInUse': number;
    /**
    * k8s clusters total limit
    */
    'k8sClusterLimitTotal': number;
    /**
    * k8s clusters provisioned
    */
    'k8sClustersProvisioned': number;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "coresPerServer",
            "baseName": "coresPerServer",
            "type": "number"
        },
        {
            "name": "coresPerContract",
            "baseName": "coresPerContract",
            "type": "number"
        },
        {
            "name": "coresProvisioned",
            "baseName": "coresProvisioned",
            "type": "number"
        },
        {
            "name": "ramPerServer",
            "baseName": "ramPerServer",
            "type": "number"
        },
        {
            "name": "ramPerContract",
            "baseName": "ramPerContract",
            "type": "number"
        },
        {
            "name": "ramProvisioned",
            "baseName": "ramProvisioned",
            "type": "number"
        },
        {
            "name": "hddLimitPerVolume",
            "baseName": "hddLimitPerVolume",
            "type": "number"
        },
        {
            "name": "hddLimitPerContract",
            "baseName": "hddLimitPerContract",
            "type": "number"
        },
        {
            "name": "hddVolumeProvisioned",
            "baseName": "hddVolumeProvisioned",
            "type": "number"
        },
        {
            "name": "ssdLimitPerVolume",
            "baseName": "ssdLimitPerVolume",
            "type": "number"
        },
        {
            "name": "ssdLimitPerContract",
            "baseName": "ssdLimitPerContract",
            "type": "number"
        },
        {
            "name": "ssdVolumeProvisioned",
            "baseName": "ssdVolumeProvisioned",
            "type": "number"
        },
        {
            "name": "reservableIps",
            "baseName": "reservableIps",
            "type": "number"
        },
        {
            "name": "reservedIpsOnContract",
            "baseName": "reservedIpsOnContract",
            "type": "number"
        },
        {
            "name": "reservedIpsInUse",
            "baseName": "reservedIpsInUse",
            "type": "number"
        },
        {
            "name": "k8sClusterLimitTotal",
            "baseName": "k8sClusterLimitTotal",
            "type": "number"
        },
        {
            "name": "k8sClustersProvisioned",
            "baseName": "k8sClustersProvisioned",
            "type": "number"
        }    ];

    static getAttributeTypeMap() {
        return ResourceLimits.attributeTypeMap;
    }
}

