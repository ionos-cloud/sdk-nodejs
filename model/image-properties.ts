/* tslint:disable */
/* eslint-disable */
/**
 * CLOUD API
 * IONOS Enterprise-grade Infrastructure as a Service (IaaS) solutions can be managed through the Cloud API, in addition or as an alternative to the \"Data Center Designer\" (DCD) browser-based tool.    Both methods employ consistent concepts and features, deliver similar power and flexibility, and can be used to perform a multitude of management tasks, including adding servers, volumes, configuring networks, and so on.
 *
 * The version of the OpenAPI document: 6.0-SDK.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



/**
 * 
 * @export
 * @interface ImageProperties
 */
export interface ImageProperties {
    /**
     * A name of that resource
     * @type {string}
     * @memberof ImageProperties
     */
    name?: string;
    /**
     * Human readable description
     * @type {string}
     * @memberof ImageProperties
     */
    description?: string;
    /**
     * Location of that image/snapshot. 
     * @type {string}
     * @memberof ImageProperties
     */
    location?: string;
    /**
     * The size of the image in GB
     * @type {number}
     * @memberof ImageProperties
     */
    size?: number;
    /**
     * Is capable of CPU hot plug (no reboot required)
     * @type {boolean}
     * @memberof ImageProperties
     */
    cpuHotPlug?: boolean;
    /**
     * Is capable of CPU hot unplug (no reboot required)
     * @type {boolean}
     * @memberof ImageProperties
     */
    cpuHotUnplug?: boolean;
    /**
     * Is capable of memory hot plug (no reboot required)
     * @type {boolean}
     * @memberof ImageProperties
     */
    ramHotPlug?: boolean;
    /**
     * Is capable of memory hot unplug (no reboot required)
     * @type {boolean}
     * @memberof ImageProperties
     */
    ramHotUnplug?: boolean;
    /**
     * Is capable of nic hot plug (no reboot required)
     * @type {boolean}
     * @memberof ImageProperties
     */
    nicHotPlug?: boolean;
    /**
     * Is capable of nic hot unplug (no reboot required)
     * @type {boolean}
     * @memberof ImageProperties
     */
    nicHotUnplug?: boolean;
    /**
     * Is capable of Virt-IO drive hot plug (no reboot required)
     * @type {boolean}
     * @memberof ImageProperties
     */
    discVirtioHotPlug?: boolean;
    /**
     * Is capable of Virt-IO drive hot unplug (no reboot required). This works only for non-Windows virtual Machines.
     * @type {boolean}
     * @memberof ImageProperties
     */
    discVirtioHotUnplug?: boolean;
    /**
     * Is capable of SCSI drive hot plug (no reboot required)
     * @type {boolean}
     * @memberof ImageProperties
     */
    discScsiHotPlug?: boolean;
    /**
     * Is capable of SCSI drive hot unplug (no reboot required). This works only for non-Windows virtual Machines.
     * @type {boolean}
     * @memberof ImageProperties
     */
    discScsiHotUnplug?: boolean;
    /**
     * OS type of this Image
     * @type {string}
     * @memberof ImageProperties
     */
    licenceType: ImagePropertiesLicenceTypeEnum;
    /**
     * This indicates the type of image
     * @type {string}
     * @memberof ImageProperties
     */
    imageType?: ImagePropertiesImageTypeEnum;
    /**
     * Indicates if the image is part of the public repository or not
     * @type {boolean}
     * @memberof ImageProperties
     */
    _public?: boolean;
    /**
     * List of image aliases mapped for this Image
     * @type {Array<string>}
     * @memberof ImageProperties
     */
    imageAliases?: Array<string>;
    /**
     * Cloud init compatibility
     * @type {string}
     * @memberof ImageProperties
     */
    cloudInit?: ImagePropertiesCloudInitEnum;
}

/**
    * @export
    * @enum {string}
    */
export enum ImagePropertiesLicenceTypeEnum {
    Unknown = 'UNKNOWN',
    Windows = 'WINDOWS',
    Windows2016 = 'WINDOWS2016',
    Linux = 'LINUX',
    Other = 'OTHER'
}
/**
    * @export
    * @enum {string}
    */
export enum ImagePropertiesImageTypeEnum {
    Hdd = 'HDD',
    Cdrom = 'CDROM',
    Unknown = 'UNKNOWN'
}
/**
    * @export
    * @enum {string}
    */
export enum ImagePropertiesCloudInitEnum {
    None = 'NONE',
    V1 = 'V1'
}



